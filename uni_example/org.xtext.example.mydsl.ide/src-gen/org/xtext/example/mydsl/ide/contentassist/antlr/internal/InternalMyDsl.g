/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEntitySystem
entryRuleEntitySystem
:
{ before(grammarAccess.getEntitySystemRule()); }
	 ruleEntitySystem
{ after(grammarAccess.getEntitySystemRule()); } 
	 EOF 
;

// Rule EntitySystem
ruleEntitySystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntitySystemAccess().getGroup()); }
		(rule__EntitySystem__Group__0)
		{ after(grammarAccess.getEntitySystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getEntityParserRuleCall_0()); }
		ruleEntity
		{ after(grammarAccess.getDeclarationAccess().getEntityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getRelationParserRuleCall_1()); }
		ruleRelation
		{ after(grammarAccess.getDeclarationAccess().getRelationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySystem__Group__0__Impl
	rule__EntitySystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySystemAccess().getSystemKeyword_0()); }
	'system'
	{ after(grammarAccess.getEntitySystemAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySystem__Group__1__Impl
	rule__EntitySystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySystemAccess().getNameAssignment_1()); }
	(rule__EntitySystem__NameAssignment_1)
	{ after(grammarAccess.getEntitySystemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySystem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySystemAccess().getDeclarationAssignment_2()); }
	(rule__EntitySystem__DeclarationAssignment_2)*
	{ after(grammarAccess.getEntitySystemAccess().getDeclarationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttributesAssignment_3()); }
	(rule__Entity__AttributesAssignment_3)*
	{ after(grammarAccess.getEntityAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getEntityAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getBaseAssignment_2_1()); }
	(rule__Entity__BaseAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getBaseAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
	'attribute'
	{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
	(rule__Attribute__NameAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
	(rule__Attribute__TypeAssignment_3)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationKeyword_0()); }
	'relation'
	{ after(grammarAccess.getRelationAccess().getRelationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getRelationAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getFromTypeAssignment_2()); }
	(rule__Relation__FromTypeAssignment_2)
	{ after(grammarAccess.getRelationAccess().getFromTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__3__Impl
	rule__Relation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getFromNameAssignment_3()); }
	(rule__Relation__FromNameAssignment_3)
	{ after(grammarAccess.getRelationAccess().getFromNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__4__Impl
	rule__Relation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getFromMultipleAssignment_4()); }
	(rule__Relation__FromMultipleAssignment_4)?
	{ after(grammarAccess.getRelationAccess().getFromMultipleAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__5__Impl
	rule__Relation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getToKeyword_5()); }
	'to'
	{ after(grammarAccess.getRelationAccess().getToKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__6__Impl
	rule__Relation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getToNameAssignment_6()); }
	(rule__Relation__ToNameAssignment_6)
	{ after(grammarAccess.getRelationAccess().getToNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__7__Impl
	rule__Relation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getToMultipleAssignment_7()); }
	(rule__Relation__ToMultipleAssignment_7)?
	{ after(grammarAccess.getRelationAccess().getToMultipleAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getToTypeAssignment_8()); }
	(rule__Relation__ToTypeAssignment_8)
	{ after(grammarAccess.getRelationAccess().getToTypeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntitySystem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySystemAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntitySystemAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__DeclarationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySystemAccess().getDeclarationDeclarationParserRuleCall_2_0()); }
		ruleDeclaration
		{ after(grammarAccess.getEntitySystemAccess().getDeclarationDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__BaseAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getBaseEntityCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getBaseEntityIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getBaseEntityIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getBaseEntityCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__FromTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getFromTypeEntityCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getFromTypeEntityIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getFromTypeEntityIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getFromTypeEntityCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__FromNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getFromNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationAccess().getFromNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__FromMultipleAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getFromMultipleAsteriskKeyword_4_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getFromMultipleAsteriskKeyword_4_0()); }
			'*'
			{ after(grammarAccess.getRelationAccess().getFromMultipleAsteriskKeyword_4_0()); }
		)
		{ after(grammarAccess.getRelationAccess().getFromMultipleAsteriskKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ToNameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getToNameIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationAccess().getToNameIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ToMultipleAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getToMultipleAsteriskKeyword_7_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getToMultipleAsteriskKeyword_7_0()); }
			'*'
			{ after(grammarAccess.getRelationAccess().getToMultipleAsteriskKeyword_7_0()); }
		)
		{ after(grammarAccess.getRelationAccess().getToMultipleAsteriskKeyword_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ToTypeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getToTypeEntityCrossReference_8_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getToTypeEntityIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getToTypeEntityIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getToTypeEntityCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
