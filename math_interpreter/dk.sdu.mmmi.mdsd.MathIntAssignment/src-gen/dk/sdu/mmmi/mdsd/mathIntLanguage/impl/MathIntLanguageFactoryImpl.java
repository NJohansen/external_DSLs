/**
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.mathIntLanguage.impl;

import dk.sdu.mmmi.mdsd.mathIntLanguage.Division;
import dk.sdu.mmmi.mdsd.mathIntLanguage.Expression;
import dk.sdu.mmmi.mdsd.mathIntLanguage.MathExp;
import dk.sdu.mmmi.mdsd.mathIntLanguage.MathIntLanguageFactory;
import dk.sdu.mmmi.mdsd.mathIntLanguage.MathIntLanguagePackage;
import dk.sdu.mmmi.mdsd.mathIntLanguage.Minus;
import dk.sdu.mmmi.mdsd.mathIntLanguage.Multiply;
import dk.sdu.mmmi.mdsd.mathIntLanguage.Plus;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MathIntLanguageFactoryImpl extends EFactoryImpl implements MathIntLanguageFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MathIntLanguageFactory init()
  {
    try
    {
      MathIntLanguageFactory theMathIntLanguageFactory = (MathIntLanguageFactory)EPackage.Registry.INSTANCE.getEFactory(MathIntLanguagePackage.eNS_URI);
      if (theMathIntLanguageFactory != null)
      {
        return theMathIntLanguageFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MathIntLanguageFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MathIntLanguageFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MathIntLanguagePackage.MATH_EXP: return createMathExp();
      case MathIntLanguagePackage.EXPRESSION: return createExpression();
      case MathIntLanguagePackage.NUMBER: return createNumber();
      case MathIntLanguagePackage.PLUS: return createPlus();
      case MathIntLanguagePackage.MINUS: return createMinus();
      case MathIntLanguagePackage.MULTIPLY: return createMultiply();
      case MathIntLanguagePackage.DIVISION: return createDivision();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MathExp createMathExp()
  {
    MathExpImpl mathExp = new MathExpImpl();
    return mathExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public dk.sdu.mmmi.mdsd.mathIntLanguage.Number createNumber()
  {
    NumberImpl number = new NumberImpl();
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Plus createPlus()
  {
    PlusImpl plus = new PlusImpl();
    return plus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Minus createMinus()
  {
    MinusImpl minus = new MinusImpl();
    return minus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Multiply createMultiply()
  {
    MultiplyImpl multiply = new MultiplyImpl();
    return multiply;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Division createDivision()
  {
    DivisionImpl division = new DivisionImpl();
    return division;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MathIntLanguagePackage getMathIntLanguagePackage()
  {
    return (MathIntLanguagePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MathIntLanguagePackage getPackage()
  {
    return MathIntLanguagePackage.eINSTANCE;
  }

} //MathIntLanguageFactoryImpl
